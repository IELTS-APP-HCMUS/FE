using login_full.Models;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using System;
using System.Threading.Tasks;
using Windows.UI;

namespace login_full.Services
{
    /// <summary>
    // Service xuất dữ liệu bài kiểm tra đọc ra file PDF.
    // Sử dụng thư viện QuestPDF để tạo và định dạng file PDF.
    // </summary>
    public class PdfExportService : IPdfExportService
    {
        /// <summary>
        /// Xuất bài kiểm tra đọc ra file PDF.
        /// </summary>
        /// <param name="testDetail">Chi tiết bài kiểm tra đọc</param>
        /// <param name="outputPath">Đường dẫn lưu file PDF</param>
        /// <returns>Task hoàn thành việc xuất file</returns>
        /// <remarks>
        /// Cấu trúc file PDF bao gồm:
        /// - Tiêu đề
        /// - Nội dung bài đọc
        /// - Danh sách câu hỏi và đáp án
        /// </remarks>
        public async Task ExportReadingTestToPdfAsync(ReadingTestDetail testDetail, string outputPath)
        {
            QuestPDF.Settings.CheckIfAllTextGlyphsAreAvailable = false;

            Document.Create(container =>
            {
                container.Page(page =>
                {
                    page.Size(PageSizes.A4);
                    page.Margin(2, Unit.Centimetre);
                    page.DefaultTextStyle(x => x.FontSize(11));

                    page.Header().ShowOnce().Element(ComposeHeader);
                    page.Content().Element(x => ComposeContent(x, testDetail));
                    page.Footer().Element(ComposeFooter);
                });
            })
            .GeneratePdf(outputPath);

            await Task.CompletedTask;
        }
        /// <summary>
        /// Tạo phần header cho file PDF.
        /// </summary>
        /// <param name="container">Container của header</param>
        private void ComposeHeader(IContainer container)
        {
            container.Row(row =>
            {
                row.RelativeItem().Column(column =>
                {
                    column.Item().Text("MePass - Reading Practice")
                        .FontSize(20)
                        .SemiBold();
                        
                    column.Item().AlignRight().Text(DateTime.Now.ToString("dd/MM/yyyy HH:mm"))
                        .FontSize(8)
                        .Italic();
                });
            });
        }
        /// <summary>
        /// Tạo phần nội dung cho file PDF.
        /// </summary>
        /// <param name="container">Container của nội dung</param>
        /// <param name="testDetail">Chi tiết bài kiểm tra đọc</param>
        private void ComposeContent(IContainer container, ReadingTestDetail testDetail)
        {
            container.Column(column =>
            {
                // Title
                column.Item().AlignCenter().Text(testDetail.Title ?? "Reading Test")
                    .FontSize(16)
                    .SemiBold();




                //column.Item().Text(testDetail.Content);
                // Content with better formatting
                column.Item().PaddingVertical(10).Text(text =>
                {
                    text.Span(testDetail.Content)
                        .FontSize(11)
                        .LineHeight(1.5f);  // Điều chỉnh khoảng cách dòng
                });


                column.Item().Height(20);

             

                int questionIndex = 1;
                foreach (var question in testDetail.Questions)
                {
                    column.Item().Text($"Question {questionIndex}:")
                        .SemiBold();
                    column.Item().Text(question.QuestionText);
                    column.Item().Height(5);

                    // Options
                    if (question.Options != null)
                    {
                        char optionLetter = 'A';
                        foreach (var option in question.Options)
                        {
                            column.Item().Text($"{optionLetter}. {option}");
                            optionLetter++;

                        }
                    }

                    column.Item().Height(10);
                    questionIndex++;
                }
            });
        }
        /// <summary>
        /// Tạo phần footer cho file PDF.
        /// </summary>
        /// <param name="container">Container của footer</param>
        private void ComposeFooter(IContainer container)
        {
            container.Row(row =>
            {
                row.RelativeItem().Text(x =>
                {
                    x.Span("Page ").FontSize(8);
                    x.CurrentPageNumber().FontSize(8);
                    x.Span(" of ").FontSize(8);
                    x.TotalPages().FontSize(8);

                });

                row.RelativeItem().AlignRight().Text("Generated by MePass")
                         .FontSize(8)
                        .Italic();
            });
        }
    }
} 